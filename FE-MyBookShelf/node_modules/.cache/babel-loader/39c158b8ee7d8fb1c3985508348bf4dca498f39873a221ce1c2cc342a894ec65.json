{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"my-books\"\n};\nconst _hoisted_2 = {\n  class: \"bookshelf-container\"\n};\nconst _hoisted_3 = {\n  class: \"shelf-header\"\n};\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"onBlur\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"book-grid\"\n};\nconst _hoisted_7 = {\n  class: \"sidebar-content\"\n};\nconst _hoisted_8 = {\n  class: \"registration-options\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"manual-form\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"isbn-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 책장 관리 \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.bookshelves, (shelf, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"bookshelf\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => shelf.name = $event,\n      class: \"shelf-name-input\",\n      onBlur: $event => $options.renameBookshelf(index, shelf.name)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelText, shelf.name]]), _createElementVNode(\"button\", {\n      onClick: $event => $options.openSidebar(index),\n      class: \"add-button\"\n    }, \"+\", 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(shelf.books, (book, bookIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: bookIndex,\n        class: \"book-placeholder\"\n      });\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 책장 추가 \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addBookshelf && $options.addBookshelf(...args)),\n    class: \"add-shelf-button\"\n  }, \"+ 책장 추가\"), _createCommentVNode(\" 사이드바 \"), $data.isSidebarOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"sidebar\", {\n      visible: $data.isSidebarOpen\n    }])\n  }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeSidebar && $options.closeSidebar(...args))\n  }, \"✖\"), _cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"책 등록\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.setRegisterType('manual')),\n    class: _normalizeClass({\n      active: $data.registerType === 'manual'\n    })\n  }, \" 직접 등록 \", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.setRegisterType('isbn')),\n    class: _normalizeClass({\n      active: $data.registerType === 'isbn'\n    })\n  }, \" ISBN 등록 \", 2 /* CLASS */)]), $data.registerType === 'manual' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"책 제목\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.manualTitle = $event),\n    placeholder: \"책 제목 입력\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.manualTitle]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.searchManual && $options.searchManual(...args))\n  }, \"검색\")])) : _createCommentVNode(\"v-if\", true), $data.registerType === 'isbn' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"isbn\"\n  }, \"ISBN\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"isbn\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.isbn = $event),\n    placeholder: \"ISBN 입력\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.isbn]]), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.searchISBN && $options.searchISBN(...args))\n  }, \"검색\")])) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","bookshelves","shelf","index","_hoisted_3","type","$event","name","onBlur","$options","renameBookshelf","_hoisted_4","onClick","openSidebar","_hoisted_5","_hoisted_6","books","book","bookIndex","_cache","args","addBookshelf","isSidebarOpen","_normalizeClass","visible","_hoisted_7","closeSidebar","_hoisted_8","setRegisterType","active","registerType","_hoisted_9","for","id","manualTitle","placeholder","searchManual","_hoisted_10","isbn","searchISBN"],"sources":["C:\\Users\\sec\\Desktop\\Vue\\proj\\FE-MyBookShelf\\src\\views\\MyBooksView.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-books\">\r\n    <!-- 책장 관리 -->\r\n    <div class=\"bookshelf-container\">\r\n      <div v-for=\"(shelf, index) in bookshelves\" :key=\"index\" class=\"bookshelf\">\r\n        <div class=\"shelf-header\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"shelf.name\"\r\n            class=\"shelf-name-input\"\r\n            @blur=\"renameBookshelf(index, shelf.name)\"\r\n          />\r\n          <button @click=\"openSidebar(index)\" class=\"add-button\">+</button>\r\n        </div>\r\n        <div class=\"book-grid\">\r\n          <div\r\n            v-for=\"(book, bookIndex) in shelf.books\"\r\n            :key=\"bookIndex\"\r\n            class=\"book-placeholder\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 책장 추가 -->\r\n    <button @click=\"addBookshelf\" class=\"add-shelf-button\">+ 책장 추가</button>\r\n\r\n    <!-- 사이드바 -->\r\n    <div\r\n      v-if=\"isSidebarOpen\"\r\n      class=\"sidebar\"\r\n      :class=\"{ visible: isSidebarOpen }\"\r\n    >\r\n      <div class=\"sidebar-content\">\r\n        <button class=\"close-button\" @click=\"closeSidebar\">✖</button>\r\n        <h3>책 등록</h3>\r\n        <div class=\"registration-options\">\r\n          <button @click=\"setRegisterType('manual')\" :class=\"{ active: registerType === 'manual' }\">\r\n            직접 등록\r\n          </button>\r\n          <button @click=\"setRegisterType('isbn')\" :class=\"{ active: registerType === 'isbn' }\">\r\n            ISBN 등록\r\n          </button>\r\n        </div>\r\n        <div v-if=\"registerType === 'manual'\" class=\"manual-form\">\r\n          <label for=\"title\">책 제목</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"manualTitle\" placeholder=\"책 제목 입력\" />\r\n          <button @click=\"searchManual\">검색</button>\r\n        </div>\r\n        <div v-if=\"registerType === 'isbn'\" class=\"isbn-form\">\r\n          <label for=\"isbn\">ISBN</label>\r\n          <input type=\"text\" id=\"isbn\" v-model=\"isbn\" placeholder=\"ISBN 입력\" />\r\n          <button @click=\"searchISBN\">검색</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MyBooksView\",\r\n  data() {\r\n    return {\r\n      bookshelves: [\r\n        { name: \"책장 1\", books: Array(20).fill(null) },\r\n      ], // 책장 프리셋\r\n      isSidebarOpen: false, // 사이드바 열림/닫힘 상태\r\n      activeShelfIndex: null, // 현재 선택된 책장 인덱스\r\n      registerType: \"manual\", // 'manual' 또는 'isbn'\r\n      manualTitle: \"\", // 직접 등록 시 입력한 책 제목\r\n      isbn: \"\", // ISBN 등록 시 입력한 ISBN\r\n    };\r\n  },\r\n  methods: {\r\n    openSidebar(index) {\r\n      this.activeShelfIndex = index;\r\n      this.isSidebarOpen = true;\r\n    },\r\n    closeSidebar() {\r\n      this.isSidebarOpen = false;\r\n      this.manualTitle = \"\";\r\n      this.isbn = \"\";\r\n    },\r\n    setRegisterType(type) {\r\n      this.registerType = type;\r\n    },\r\n    searchManual() {\r\n      // 책 제목으로 검색 로직 (API 연동 예정)\r\n      console.log(\"검색된 책 제목:\", this.manualTitle);\r\n    },\r\n    searchISBN() {\r\n      // ISBN으로 검색 로직 (API 연동 예정)\r\n      console.log(\"검색된 ISBN:\", this.isbn);\r\n    },\r\n    addBookshelf() {\r\n      this.bookshelves.push({ name: `책장 ${this.bookshelves.length + 1}`, books: [] });\r\n    },\r\n    renameBookshelf(index, newName) {\r\n      this.bookshelves[index].name = newName;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my-books {\r\n  padding: 20px;\r\n}\r\n\r\n/* 책장 스타일 */\r\n.bookshelf-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n}\r\n\r\n.shelf-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.shelf-name-input {\r\n  border: none;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background: transparent;\r\n  outline: none;\r\n}\r\n\r\n.add-button {\r\n  background-color: #ffa500;\r\n  color: white;\r\n  font-size: 18px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  cursor: pointer;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 10px;\r\n}\r\n\r\n.book-placeholder {\r\n  width: 100%;\r\n  padding-top: 150%;\r\n  background-color: #f0f0f0;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n}\r\n\r\n/* 책장 추가 버튼 */\r\n.add-shelf-button {\r\n  padding: 10px;\r\n  background-color: #ffa500;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* 사이드바 스타일 */\r\n.sidebar {\r\n  position: fixed;\r\n  top: 0;\r\n  right: -400px;\r\n  width: 400px;\r\n  height: 100%;\r\n  background-color: white;\r\n  box-shadow: -2px 0 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 25px;\r\n  transition: right 0.3s ease-in-out;\r\n}\r\n\r\n.sidebar.visible {\r\n  right: 0;\r\n}\r\n\r\n.close-button {\r\n  align-self: flex-end;\r\n  font-size: 20px;\r\n  color: black;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}