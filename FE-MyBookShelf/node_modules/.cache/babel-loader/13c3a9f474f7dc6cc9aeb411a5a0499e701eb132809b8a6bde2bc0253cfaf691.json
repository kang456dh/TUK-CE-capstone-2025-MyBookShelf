{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelRadio as _vModelRadio, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"email-input-wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"email-input-wrapper\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  class: \"gender\"\n};\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = {\n  class: \"genre-select\"\n};\nconst _hoisted_15 = [\"value\"];\nconst _hoisted_16 = {\n  class: \"genre-select\"\n};\nconst _hoisted_17 = [\"value\"];\nconst _hoisted_18 = {\n  class: \"genre-select\"\n};\nconst _hoisted_19 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args)),\n    class: \"back-button\"\n  }, \"◁\"), _cache[35] || (_cache[35] = _createElementVNode(\"h2\", null, \"회원가입\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[16] || (_cache[16] = _withModifiers((...args) => $options.handleSignup && $options.handleSignup(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" 이메일 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"이메일\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"이메일 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.checkEmailDuplicate && $options.checkEmailDuplicate(...args))\n  }, \"중복 확인\")])]), _createElementVNode(\"div\", _hoisted_4, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n    for: \"verificationCode\"\n  }, \"인증번호\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"verificationCode\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.verificationCode = $event),\n    placeholder: \"인증번호 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.verificationCode]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.sendVerificationCode && $options.sendVerificationCode(...args))\n  }, \"인증번호 받기\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.verifyCode && $options.verifyCode(...args))\n  }, \"인증하기\")])]), _createCommentVNode(\" 비밀번호 \"), _createElementVNode(\"div\", _hoisted_6, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"비밀번호\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.password = $event),\n    placeholder: \"비밀번호 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    for: \"passwordConfirm\"\n  }, \"비밀번호 확인\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"passwordConfirm\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.passwordConfirm = $event),\n    placeholder: \"비밀번호 확인 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.passwordConfirm]])]), _createCommentVNode(\" 이름 \"), _createElementVNode(\"div\", _hoisted_8, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"이름\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.name = $event),\n    placeholder: \"이름 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createCommentVNode(\" 닉네임 \"), _createElementVNode(\"div\", _hoisted_9, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n    for: \"nickname\"\n  }, \"닉네임\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"nickname\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.nickname = $event),\n    placeholder: \"닉네임 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nickname]])]), _createCommentVNode(\" 생년월일 \"), _createElementVNode(\"div\", _hoisted_10, [_cache[23] || (_cache[23] = _createElementVNode(\"label\", {\n    for: \"birthdate\"\n  }, \"생년월일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"birthdate\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.birthdate = $event),\n    placeholder: \"YYYY-MM-DD\",\n    pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.birthdate]])]), _createCommentVNode(\" 성별 \"), _createElementVNode(\"div\", _hoisted_11, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", null, \"성별\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: \"남\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.gender = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.gender]]), _cache[24] || (_cache[24] = _createTextVNode(\" 남 \"))]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: \"여\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.gender = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.gender]]), _cache[25] || (_cache[25] = _createTextVNode(\" 여 \"))])])]), _createCommentVNode(\" 선호 장르 \"), _createElementVNode(\"div\", _hoisted_13, [_cache[33] || (_cache[33] = _createElementVNode(\"label\", null, \"선호 장르\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    for: \"genre1\"\n  }, \"[장르 1]\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.selectedGenre1 = $event),\n    id: \"genre1\",\n    required: \"\"\n  }, [_cache[27] || (_cache[27] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"선택\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allGenres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre1]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"genre2\"\n  }, \"[장르 2]\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.selectedGenre2 = $event),\n    id: \"genre2\"\n  }, [_cache[29] || (_cache[29] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"선택\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allGenres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_17);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre2]])]), _createElementVNode(\"div\", _hoisted_18, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    for: \"genre3\"\n  }, \"[장르 3]\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.selectedGenre3 = $event),\n    id: \"genre3\"\n  }, [_cache[31] || (_cache[31] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"선택\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allGenres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_19);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre3]])])]), _cache[34] || (_cache[34] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"signup-button\"\n  }, \"회원가입하기\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","goBack","onSubmit","_withModifiers","handleSignup","_createCommentVNode","_hoisted_2","for","_hoisted_3","type","id","$event","$data","email","placeholder","required","checkEmailDuplicate","_hoisted_4","_hoisted_5","verificationCode","sendVerificationCode","verifyCode","_hoisted_6","password","_hoisted_7","passwordConfirm","_hoisted_8","name","_hoisted_9","nickname","_hoisted_10","birthdate","pattern","_hoisted_11","_hoisted_12","value","gender","_createTextVNode","_hoisted_13","_hoisted_14","selectedGenre1","disabled","selected","_Fragment","_renderList","allGenres","genre","key","_hoisted_15","_hoisted_16","selectedGenre2","_hoisted_17","_hoisted_18","selectedGenre3","_hoisted_19"],"sources":["C:\\Users\\sec\\Desktop\\Vue\\Last\\lib\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <button @click=\"goBack\" class=\"back-button\">◁</button>\r\n\r\n    <h2>회원가입</h2>\r\n    <form @submit.prevent=\"handleSignup\">\r\n      <!-- 이메일 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">이메일</label>\r\n        <div class=\"email-input-wrapper\">\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            placeholder=\"이메일 입력\" \r\n            required \r\n          />\r\n          <button type=\"button\" @click=\"checkEmailDuplicate\">중복 확인</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"verificationCode\">인증번호</label>\r\n        <div class=\"email-input-wrapper\">\r\n          <input \r\n            type=\"text\" \r\n            id=\"verificationCode\" \r\n            v-model=\"verificationCode\" \r\n            placeholder=\"인증번호 입력\" \r\n            required \r\n          />\r\n          <button type=\"button\" @click=\"sendVerificationCode\">인증번호 받기</button>\r\n          <button type=\"button\" @click=\"verifyCode\">인증하기</button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- 비밀번호 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">비밀번호</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"비밀번호 입력\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"passwordConfirm\">비밀번호 확인</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"passwordConfirm\"\r\n          v-model=\"passwordConfirm\"\r\n          placeholder=\"비밀번호 확인 입력\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <!-- 이름 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">이름</label>\r\n        <input type=\"text\" id=\"name\" v-model=\"name\" placeholder=\"이름 입력\" required />\r\n      </div>\r\n\r\n      <!-- 닉네임 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"nickname\">닉네임</label>\r\n        <input type=\"text\" id=\"nickname\" v-model=\"nickname\" placeholder=\"닉네임 입력\" required />\r\n      </div>\r\n\r\n      <!-- 생년월일 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"birthdate\">생년월일</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"birthdate\"\r\n          v-model=\"birthdate\"\r\n          placeholder=\"YYYY-MM-DD\"\r\n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <!-- 성별 -->\r\n      <div class=\"form-group\">\r\n        <label>성별</label>\r\n        <div class=\"gender\">\r\n          <label>\r\n            <input type=\"radio\" value=\"남\" v-model=\"gender\" required /> 남\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" value=\"여\" v-model=\"gender\" required /> 여\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 선호 장르 -->\r\n      <div class=\"form-group\">\r\n        <label>선호 장르</label>\r\n        <div class=\"genre-select\">\r\n          <label for=\"genre1\">[장르 1]</label>\r\n          <select v-model=\"selectedGenre1\" id=\"genre1\" required>\r\n            <option value=\"\" disabled selected>선택</option>\r\n            <option v-for=\"genre in allGenres\" :key=\"genre\" :value=\"genre\">{{ genre }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"genre-select\">\r\n          <label for=\"genre2\">[장르 2]</label>\r\n          <select v-model=\"selectedGenre2\" id=\"genre2\">\r\n            <option value=\"\" disabled selected>선택</option>\r\n            <option v-for=\"genre in allGenres\" :key=\"genre\" :value=\"genre\">{{ genre }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"genre-select\">\r\n          <label for=\"genre3\">[장르 3]</label>\r\n          <select v-model=\"selectedGenre3\" id=\"genre3\">\r\n            <option value=\"\" disabled selected>선택</option>\r\n            <option v-for=\"genre in allGenres\" :key=\"genre\" :value=\"genre\">{{ genre }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"signup-button\">회원가입하기</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"SignupView\",\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      verificationCode: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      name: \"\",\r\n      nickname: \"\",\r\n      birthdate: \"\",\r\n      gender: \"\",\r\n      selectedGenre1: \"\",\r\n      selectedGenre2: \"\",\r\n      selectedGenre3: \"\",\r\n      allGenres: [\r\n        // 000 총류\r\n        \"도서관, 서지학\",\r\n        \"문헌정보학\",\r\n        \"백과사전\",\r\n        \"강연집, 수필집, 연설문집\",\r\n        \"일반 연속간행물\",\r\n        \"일반학회, 단체, 협회, 기관\",\r\n        \"신문, 언론, 저널리즘\",\r\n        \"일반전집, 총서\",\r\n        \"향토자료\",\r\n        \r\n        // 100 철학학\r\n        \"형이상학\",\r\n        \"인식론, 인과론, 인간학\",\r\n        \"철학의 체계\",\r\n        \"경학\",\r\n        \"아시아철학, 사상\",\r\n        \"서양철학\",\r\n        \"논리학\",\r\n        \"심리학\",\r\n        \"윤리학, 도덕철학\",\r\n\r\n        // 200 종교\r\n        \"비교종교\",\r\n        \"불교\",\r\n        \"기독교\",\r\n        \"도교\",\r\n        \"천도교\",\r\n        \"신도\",\r\n        \"힌두교, 브라만교\",\r\n        \"이슬람교(회교)\",\r\n        \"기타 제종교\",\r\n\r\n        // 300 사회과학\r\n        \"통계학\",\r\n        \"경제학\",\r\n        \"사회학, 사회문제\",\r\n        \"정지학\",\r\n        \"행정학\",\r\n        \"법학\",\r\n        \"교육학\",\r\n        \"풍속, 예절, 민속학\",\r\n        \"국방, 군사학\",\r\n\r\n        // 400 자연과학\r\n        \"수학\",\r\n        \"물리학\",\r\n        \"화학\",\r\n        \"천문학\",\r\n        \"지학\",\r\n        \"광물학\",\r\n        \"생명과학\",\r\n        \"식물학\",\r\n        \"동물학\",\r\n\r\n        // 500 기술과학\r\n        \"의학\",\r\n        \"농업, 농학\",\r\n        \"공학, 공업일반, 토목공학, 환경공학\",\r\n        \"건축공학\",\r\n        \"기계공학\",\r\n        \"전기공학, 전자공학\",\r\n        \"화학공학\",\r\n        \"제조업\",\r\n        \"생활과학\",\r\n\r\n        // 600 예술\r\n        \"건축물\",\r\n        \"조각, 조형예술\",\r\n        \"공예, 장식미술\",\r\n        \"서예\",\r\n        \"회화, 도화\",\r\n        \"사진예술\",\r\n        \"음악\",\r\n        \"공연예술, 매체예술\",\r\n        \"오락, 스포츠\",\r\n\r\n        // 700 언어\r\n        \"한국어\",\r\n        \"중국어\",\r\n        \"일본어, 기타아시아제어\",\r\n        \"영어\",\r\n        \"독일어\",\r\n        \"프랑스어\",\r\n        \"스페인어, 포르투갈어\",\r\n        \"이탈리아어\",\r\n        \"기타제어\",\r\n\r\n        // 800 문학\r\n        \"한국문학\",\r\n        \"중국문학\",\r\n        \"일본문학, 기타아시아문학\",\r\n        \"영미문학\",\r\n        \"독일문학\",\r\n        \"프랑스문학\",\r\n        \"스페인, 포르투갈문학\",\r\n        \"이탈리아문학\",\r\n        \"기타제문학\",\r\n\r\n        // 900 역사\r\n        \"아시아\",\r\n        \"유럽\",\r\n        \"아프리카\",\r\n        \"북아메리카\",\r\n        \"남아메리카\",\r\n        \"오세아니아\",\r\n        \"양극지방\",\r\n        \"지리\",\r\n        \"전기\",\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      this.$router.push(\"/login\");\r\n    },\r\n    checkEmailDuplicate() {\r\n      // 이메일 중복 확인 로직\r\n      console.log(\"Checking email duplicate:\", this.email);\r\n    },\r\n    sendVerificationCode() {\r\n      // 인증번호 전송 로직\r\n      console.log(\"Sending verification code to:\", this.email);\r\n    },\r\n    verifyCode() {\r\n      // 인증번호 확인 로직\r\n      console.log(\"Verifying code:\", this.verificationCode);\r\n    },\r\n    handleSignup() {\r\n      if (this.password !== this.passwordConfirm) {\r\n        alert(\"비밀번호가 일치하지 않습니다.\");\r\n        return;\r\n      }\r\n      const signupData = {\r\n        email: this.email,\r\n        password: this.password,\r\n        name: this.name,\r\n        nickname: this.nickname,\r\n        birthdate: this.birthdate,\r\n        gender: this.gender,\r\n        genres: [this.selectedGenre1, this.selectedGenre2, this.selectedGenre3],\r\n      };\r\n      console.log(\"회원가입 데이터:\", signupData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.form-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n}\r\n\r\n.email-input-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px; /* 입력란과 버튼 사이의 간격 */\r\n}\r\n\r\n.email-input-wrapper input {\r\n  flex: 1; /* 입력란이 가로로 확장되도록 설정 */\r\n}\r\n\r\n.email-input-wrapper button {\r\n  padding: 8px 12px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: #28a745;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.email-input-wrapper button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\ninput,\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 성별 체크박스 */\r\n.gender {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.gender label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 7px; /* 텍스트와 체크박스 간격 */\r\n}\r\n\r\n.signup-button {\r\n  width: 100%;\r\n  padding: 8px; /* 버튼 크기 줄이기 */\r\n  font-size: 14px; /* 폰트 크기 줄이기 */\r\n  color: #fff;\r\n  background: #28a745;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.signup-button:hover {\r\n  background: #218838;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}