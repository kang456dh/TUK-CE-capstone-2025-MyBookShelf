{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: \"MyBooksView\",\n  data() {\n    return {\n      bookshelves: [],\n      currentBookshelf: \"\",\n      isRenaming: false,\n      newBookshelfName: \"\",\n      isSidebarOpen: false,\n      registerType: \"manual\",\n      manualTitle: \"\",\n      isbn: \"\",\n      userId: 1 // 예시로 사용자 ID를 1로 설정 (실제로는 로그인 정보 등을 통해 가져와야 함)\n    };\n  },\n  computed: {\n    currentBookshelfBooks() {\n      const shelf = this.bookshelves.find(shelf => shelf.bookshelfName === this.currentBookshelf);\n      return shelf ? shelf.book : [];\n    }\n  },\n  methods: {\n    // 책장 이름 수정 토글\n    toggleRenameMode() {\n      if (this.isRenaming) {\n        const shelf = this.bookshelves.find(shelf => shelf.bookshelfName === this.currentBookshelf);\n        if (shelf) {\n          shelf.bookshelfName = this.newBookshelfName;\n          // API로 책장 이름 수정 요청\n          axios.patch('/api/bookshelf/edit', {\n            bookshelfId: shelf.bookshelfId,\n            bookshelfName: this.newBookshelfName\n          }).then(response => {\n            console.log('책장 이름 수정 성공:', response.data);\n          }).catch(error => {\n            console.error('책장 이름 수정 실패:', error);\n          });\n        }\n        this.currentBookshelf = this.newBookshelfName;\n      } else {\n        this.newBookshelfName = this.currentBookshelf;\n      }\n      this.isRenaming = !this.isRenaming;\n    },\n    // 책장 목록 변경 시\n    selectBookshelf() {\n      // 책장 변경 로직\n    },\n    // 책장 추가 시\n    addBookshelf() {\n      const newShelfName = `책장 ${this.bookshelves.length + 1}`;\n      axios.post('/api/bookshelf/', {\n        userId: this.userId,\n        bookshelfName: newShelfName\n      }).then(() => {\n        // response를 사용하지 않도록 수정\n        this.bookshelves.push({\n          bookshelfId: Math.floor(Math.random() * 1000),\n          // 임시 값 예시\n          bookshelfName: newShelfName,\n          book: []\n        });\n        this.currentBookshelf = newShelfName;\n      }).catch(error => {\n        console.error('책장 추가 실패:', error);\n      });\n    },\n    // 책장 삭제\n    deleteBookshelf() {\n      const bookshelfToDelete = this.bookshelves.find(shelf => shelf.bookshelfName === this.currentBookshelf);\n      if (bookshelfToDelete) {\n        axios.patch(`/api/bookshelf/delete/${bookshelfToDelete.bookshelfId}`).then(response => {\n          this.bookshelves = this.bookshelves.filter(shelf => shelf.bookshelfName !== this.currentBookshelf);\n          if (this.bookshelves.length > 0) {\n            this.currentBookshelf = this.bookshelves[0].bookshelfName;\n          } else {\n            this.addBookshelf();\n          }\n        }).catch(error => {\n          console.error('책장 삭제 실패:', error);\n        });\n      }\n    },\n    // 사이드바 열기\n    openSidebar() {\n      this.isSidebarOpen = true;\n    },\n    // 사이드바 닫기\n    closeSidebar() {\n      this.isSidebarOpen = false;\n      this.manualTitle = \"\";\n      this.isbn = \"\";\n    },\n    // 책 등록 방식 설정 (직접 등록 / ISBN 등록)\n    setRegisterType(type) {\n      this.registerType = type;\n    },\n    // 직접 등록 검색\n    searchManual() {\n      console.log(\"검색된 책 제목:\", this.manualTitle);\n      // 직접 등록 도서 정보를 서버에 등록 (추가 필요)\n    },\n    // ISBN 등록 검색\n    searchISBN() {\n      console.log(\"검색된 ISBN:\", this.isbn);\n      // ISBN으로 책 정보 조회 후 서버에 등록 (추가 필요)\n    },\n    // 책장 목록 가져오기 (API 호출)\n    fetchBookshelves() {\n      axios.get(`/api/bookshelft/${this.userId}`).then(response => {\n        this.bookshelves = response.data.map(shelf => ({\n          bookshelfId: shelf.bookshelfId,\n          bookshelfName: shelf.bookshelfName,\n          book: shelf.book\n        }));\n        if (this.bookshelves.length > 0) {\n          this.currentBookshelf = this.bookshelves[0].bookshelfName;\n        }\n      }).catch(error => {\n        console.error('책장 목록 불러오기 실패:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchBookshelves();\n  }\n};","map":{"version":3,"names":["axios","name","data","bookshelves","currentBookshelf","isRenaming","newBookshelfName","isSidebarOpen","registerType","manualTitle","isbn","userId","computed","currentBookshelfBooks","shelf","find","bookshelfName","book","methods","toggleRenameMode","patch","bookshelfId","then","response","console","log","catch","error","selectBookshelf","addBookshelf","newShelfName","length","post","push","Math","floor","random","deleteBookshelf","bookshelfToDelete","filter","openSidebar","closeSidebar","setRegisterType","type","searchManual","searchISBN","fetchBookshelves","get","map","mounted"],"sources":["C:\\Users\\sec\\Desktop\\Vue\\proj\\FE-MyBookShelf\\src\\views\\MyBooksView.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-books\">\r\n    <!-- 책장 헤더 -->\r\n    <div class=\"bookshelf-header\">\r\n      <div class=\"bookshelf-controls\">\r\n        <div v-if=\"isRenaming\">\r\n          <input \r\n            v-model=\"newBookshelfName\" \r\n            @keyup.enter=\"toggleRenameMode\" \r\n            class=\"rename-input\" \r\n            type=\"text\" \r\n            placeholder=\"새 책장 이름 입력\"\r\n          />\r\n        </div>\r\n        <select\r\n          v-else\r\n          v-model=\"currentBookshelf\"\r\n          @change=\"selectBookshelf\"\r\n          class=\"bookshelf-select\"\r\n        >\r\n          <option\r\n            v-for=\"(shelf, index) in bookshelves\"\r\n            :key=\"index\"\r\n            :value=\"shelf.bookshelfName\"\r\n          >\r\n            {{ shelf.bookshelfName }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"toggleRenameMode\" class=\"rename-button\">\r\n          {{ isRenaming ? \"저장\" : \"이름 변경\" }}\r\n        </button>\r\n        <button @click=\"addBookshelf\" class=\"add-bookshelf-button\">+</button>\r\n        <button @click=\"deleteBookshelf\" class=\"delete-bookshelf-button\">🗑</button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 네모난 책장 폼 -->\r\n    <div class=\"bookshelf\">\r\n      <div class=\"book-grid\">\r\n        <div\r\n          v-for=\"(book, index) in currentBookshelfBooks\"\r\n          :key=\"index\"\r\n          class=\"book-placeholder\"\r\n        >\r\n          <div v-if=\"book.thumbnail\" class=\"book-cover\">\r\n            <img :src=\"book.thumbnail\" alt=\"책 표지\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 사이드바 -->\r\n    <div v-if=\"isSidebarOpen\" class=\"sidebar\">\r\n      <div class=\"sidebar-content\">\r\n        <button class=\"close-button\" @click=\"closeSidebar\">✖</button>\r\n        <h3>책 등록</h3>\r\n        <div class=\"registration-options\">\r\n          <button @click=\"setRegisterType('manual')\" :class=\"{ active: registerType === 'manual' }\">\r\n            직접 등록\r\n          </button>\r\n          <button @click=\"setRegisterType('isbn')\" :class=\"{ active: registerType === 'isbn' }\">\r\n            ISBN 등록\r\n          </button>\r\n        </div>\r\n        <div v-if=\"registerType === 'manual'\" class=\"manual-form\">\r\n          <label for=\"title\">책 제목</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"manualTitle\" placeholder=\"책 제목 입력\" />\r\n          <button @click=\"searchManual\">검색</button>\r\n        </div>\r\n        <div v-if=\"registerType === 'isbn'\" class=\"isbn-form\">\r\n          <label for=\"isbn\">ISBN</label>\r\n          <input type=\"text\" id=\"isbn\" v-model=\"isbn\" placeholder=\"ISBN 입력\" />\r\n          <button @click=\"searchISBN\">검색</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"MyBooksView\",\r\n  data() {\r\n    return {\r\n      bookshelves: [],\r\n      currentBookshelf: \"\",\r\n      isRenaming: false,\r\n      newBookshelfName: \"\",\r\n      isSidebarOpen: false,\r\n      registerType: \"manual\",\r\n      manualTitle: \"\",\r\n      isbn: \"\",\r\n      userId: 1, // 예시로 사용자 ID를 1로 설정 (실제로는 로그인 정보 등을 통해 가져와야 함)\r\n    };\r\n  },\r\n  computed: {\r\n    currentBookshelfBooks() {\r\n      const shelf = this.bookshelves.find(\r\n        (shelf) => shelf.bookshelfName === this.currentBookshelf\r\n      );\r\n      return shelf ? shelf.book : [];\r\n    },\r\n  },\r\n  methods: {\r\n    // 책장 이름 수정 토글\r\n    toggleRenameMode() {\r\n      if (this.isRenaming) {\r\n        const shelf = this.bookshelves.find(\r\n          (shelf) => shelf.bookshelfName === this.currentBookshelf\r\n        );\r\n        if (shelf) {\r\n          shelf.bookshelfName = this.newBookshelfName;\r\n          // API로 책장 이름 수정 요청\r\n          axios.patch('/api/bookshelf/edit', {\r\n            bookshelfId: shelf.bookshelfId,\r\n            bookshelfName: this.newBookshelfName,\r\n          })\r\n            .then(response => {\r\n              console.log('책장 이름 수정 성공:', response.data);\r\n            })\r\n            .catch(error => {\r\n              console.error('책장 이름 수정 실패:', error);\r\n            });\r\n        }\r\n        this.currentBookshelf = this.newBookshelfName;\r\n      } else {\r\n        this.newBookshelfName = this.currentBookshelf;\r\n      }\r\n      this.isRenaming = !this.isRenaming;\r\n    },\r\n    \r\n    // 책장 목록 변경 시\r\n    selectBookshelf() {\r\n      // 책장 변경 로직\r\n    },\r\n    \r\n    // 책장 추가 시\r\n    addBookshelf() {\r\n  const newShelfName = `책장 ${this.bookshelves.length + 1}`;\r\n  axios.post('/api/bookshelf/', {\r\n    userId: this.userId,\r\n    bookshelfName: newShelfName,\r\n  })\r\n    .then(() => {  // response를 사용하지 않도록 수정\r\n      this.bookshelves.push({\r\n        bookshelfId: Math.floor(Math.random() * 1000),  // 임시 값 예시\r\n        bookshelfName: newShelfName,\r\n        book: [],\r\n      });\r\n      this.currentBookshelf = newShelfName;\r\n    })\r\n    .catch(error => {\r\n      console.error('책장 추가 실패:', error);\r\n    });\r\n},\r\n\r\n\r\n    \r\n    // 책장 삭제\r\n    deleteBookshelf() {\r\n      const bookshelfToDelete = this.bookshelves.find(shelf => shelf.bookshelfName === this.currentBookshelf);\r\n      if (bookshelfToDelete) {\r\n        axios.patch(`/api/bookshelf/delete/${bookshelfToDelete.bookshelfId}`)\r\n          .then(response => {\r\n            this.bookshelves = this.bookshelves.filter(\r\n              (shelf) => shelf.bookshelfName !== this.currentBookshelf\r\n            );\r\n            if (this.bookshelves.length > 0) {\r\n              this.currentBookshelf = this.bookshelves[0].bookshelfName;\r\n            } else {\r\n              this.addBookshelf();\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.error('책장 삭제 실패:', error);\r\n          });\r\n      }\r\n    },\r\n\r\n    // 사이드바 열기\r\n    openSidebar() {\r\n      this.isSidebarOpen = true;\r\n    },\r\n\r\n    // 사이드바 닫기\r\n    closeSidebar() {\r\n      this.isSidebarOpen = false;\r\n      this.manualTitle = \"\";\r\n      this.isbn = \"\";\r\n    },\r\n\r\n    // 책 등록 방식 설정 (직접 등록 / ISBN 등록)\r\n    setRegisterType(type) {\r\n      this.registerType = type;\r\n    },\r\n\r\n    // 직접 등록 검색\r\n    searchManual() {\r\n      console.log(\"검색된 책 제목:\", this.manualTitle);\r\n      // 직접 등록 도서 정보를 서버에 등록 (추가 필요)\r\n    },\r\n\r\n    // ISBN 등록 검색\r\n    searchISBN() {\r\n      console.log(\"검색된 ISBN:\", this.isbn);\r\n      // ISBN으로 책 정보 조회 후 서버에 등록 (추가 필요)\r\n    },\r\n\r\n    // 책장 목록 가져오기 (API 호출)\r\n    fetchBookshelves() {\r\n      axios.get(`/api/bookshelft/${this.userId}`)\r\n        .then(response => {\r\n          this.bookshelves = response.data.map(shelf => ({\r\n            bookshelfId: shelf.bookshelfId,\r\n            bookshelfName: shelf.bookshelfName,\r\n            book: shelf.book,\r\n          }));\r\n          if (this.bookshelves.length > 0) {\r\n            this.currentBookshelf = this.bookshelves[0].bookshelfName;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('책장 목록 불러오기 실패:', error);\r\n        });\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchBookshelves();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my-books {\r\n  padding: 20px;\r\n}\r\n\r\n.bookshelf-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.bookshelf-controls {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.bookshelf-select {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.rename-button,\r\n.add-bookshelf-button,\r\n.delete-bookshelf-button {\r\n  background-color: #ffa500;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n}\r\n\r\n.add-bookshelf-button {\r\n  background-color: #28a745;\r\n}\r\n\r\n.delete-bookshelf-button {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.bookshelf {\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 5px;\r\n}\r\n\r\n.book-placeholder {\r\n  width: 100%;\r\n  padding-top: 150%;\r\n  background-color: #e9ecef;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  position: relative;\r\n}\r\n\r\n.book-cover img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n/* 사이드바 스타일 */\r\n.sidebar {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 400px;\r\n  height: 100%;\r\n  background-color: #fff;\r\n  box-shadow: -2px 0 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  padding: 25px;\r\n}\r\n\r\n.rename-input {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}