{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelDynamic as _vModelDynamic, vModelRadio as _vModelRadio, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"email-input-wrapper\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"email-input-wrapper\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"password-input-wrapper\"\n};\nconst _hoisted_10 = [\"type\"];\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  class: \"password-input-wrapper\"\n};\nconst _hoisted_13 = [\"type\"];\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = {\n  class: \"form-group\"\n};\nconst _hoisted_18 = {\n  class: \"gender\"\n};\nconst _hoisted_19 = {\n  class: \"form-group\"\n};\nconst _hoisted_20 = {\n  class: \"genre-select\"\n};\nconst _hoisted_21 = [\"value\"];\nconst _hoisted_22 = {\n  class: \"genre-select\"\n};\nconst _hoisted_23 = [\"value\"];\nconst _hoisted_24 = {\n  class: \"genre-select\"\n};\nconst _hoisted_25 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args)),\n    class: \"back-button\"\n  }, \"◁\"), _cache[37] || (_cache[37] = _createElementVNode(\"h2\", null, \"회원가입\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[18] || (_cache[18] = _withModifiers((...args) => $options.handleSignup && $options.handleSignup(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" 이메일 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"이메일\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.email = $event),\n    placeholder: \"이메일 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.checkEmailDuplicate && $options.checkEmailDuplicate(...args))\n  }, \"중복 확인\")]), $data.emailErrorMessage ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.emailErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_5, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    for: \"verificationCode\"\n  }, \"인증번호\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"verificationCode\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.verificationCode = $event),\n    placeholder: \"인증번호 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.verificationCode]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.sendVerificationCode && $options.sendVerificationCode(...args))\n  }, \"인증번호 받기\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.verifyCode && $options.verifyCode(...args))\n  }, \"인증하기\")]), $data.verificationErrorMessage ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($data.verificationErrorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 비밀번호 \"), _createElementVNode(\"div\", _hoisted_8, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"비밀번호\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.passwordVisible ? 'text' : 'password',\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.password = $event),\n    placeholder: \"비밀번호 입력\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_10), [[_vModelDynamic, $data.password]]), _createElementVNode(\"span\", {\n    class: \"toggle-visibility\",\n    onClick: _cache[7] || (_cache[7] = $event => $options.togglePasswordVisibility('password'))\n  }, _toDisplayString($data.passwordVisible ? '👁️' : '👁️‍🗨️'), 1 /* TEXT */)])]), _createCommentVNode(\" 비밀번호 확인 \"), _createElementVNode(\"div\", _hoisted_11, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n    for: \"passwordConfirm\"\n  }, \"비밀번호 확인\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.passwordConfirmVisible ? 'text' : 'password',\n    id: \"passwordConfirm\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.passwordConfirm = $event),\n    placeholder: \"비밀번호 확인 입력\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_13), [[_vModelDynamic, $data.passwordConfirm]]), _createElementVNode(\"span\", {\n    class: \"toggle-visibility\",\n    onClick: _cache[9] || (_cache[9] = $event => $options.togglePasswordVisibility('passwordConfirm'))\n  }, _toDisplayString($data.passwordConfirmVisible ? '👁️' : '👁️‍🗨️'), 1 /* TEXT */)])]), _createCommentVNode(\" 이름 \"), _createElementVNode(\"div\", _hoisted_14, [_cache[23] || (_cache[23] = _createElementVNode(\"label\", {\n    for: \"name\"\n  }, \"이름\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.name = $event),\n    placeholder: \"이름 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createCommentVNode(\" 닉네임 \"), _createElementVNode(\"div\", _hoisted_15, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", {\n    for: \"nickname\"\n  }, \"닉네임\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"nickname\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.nickname = $event),\n    placeholder: \"닉네임 입력\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nickname]])]), _createCommentVNode(\" 생년월일 \"), _createElementVNode(\"div\", _hoisted_16, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n    for: \"birthdate\"\n  }, \"생년월일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"birthdate\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.birthdate = $event),\n    placeholder: \"YYYY-MM-DD\",\n    pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.birthdate]])]), _createCommentVNode(\" 성별 \"), _createElementVNode(\"div\", _hoisted_17, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", null, \"성별\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: \"남\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.gender = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.gender]]), _cache[26] || (_cache[26] = _createTextVNode(\" 남 \"))]), _createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    value: \"여\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.gender = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.gender]]), _cache[27] || (_cache[27] = _createTextVNode(\" 여 \"))])])]), _createCommentVNode(\" 선호 장르 \"), _createElementVNode(\"div\", _hoisted_19, [_cache[35] || (_cache[35] = _createElementVNode(\"label\", null, \"선호 장르\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_20, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"genre1\"\n  }, \"[장르 1]\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.selectedGenre1 = $event),\n    id: \"genre1\",\n    required: \"\"\n  }, [_cache[29] || (_cache[29] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"선택\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allGenres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_21);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre1]])]), _createElementVNode(\"div\", _hoisted_22, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    for: \"genre2\"\n  }, \"[장르 2]\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.selectedGenre2 = $event),\n    id: \"genre2\"\n  }, [_cache[31] || (_cache[31] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"선택\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allGenres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_23);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre2]])]), _createElementVNode(\"div\", _hoisted_24, [_cache[34] || (_cache[34] = _createElementVNode(\"label\", {\n    for: \"genre3\"\n  }, \"[장르 3]\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.selectedGenre3 = $event),\n    id: \"genre3\"\n  }, [_cache[33] || (_cache[33] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"선택\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allGenres, genre => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: genre,\n      value: genre\n    }, _toDisplayString(genre), 9 /* TEXT, PROPS */, _hoisted_25);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre3]])])]), _cache[36] || (_cache[36] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"signup-button\"\n  }, \"회원가입하기\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","goBack","onSubmit","_withModifiers","handleSignup","_createCommentVNode","_hoisted_2","for","_hoisted_3","type","id","$event","$data","email","placeholder","required","checkEmailDuplicate","emailErrorMessage","_hoisted_4","_toDisplayString","_hoisted_5","_hoisted_6","verificationCode","sendVerificationCode","verifyCode","verificationErrorMessage","_hoisted_7","_hoisted_8","_hoisted_9","passwordVisible","password","_hoisted_10","togglePasswordVisibility","_hoisted_11","_hoisted_12","passwordConfirmVisible","passwordConfirm","_hoisted_13","_hoisted_14","name","_hoisted_15","nickname","_hoisted_16","birthdate","pattern","_hoisted_17","_hoisted_18","value","gender","_createTextVNode","_hoisted_19","_hoisted_20","selectedGenre1","disabled","selected","_Fragment","_renderList","allGenres","genre","_hoisted_21","_hoisted_22","selectedGenre2","_hoisted_23","_hoisted_24","selectedGenre3","_hoisted_25"],"sources":["C:\\Users\\sec\\Desktop\\Vue\\Last\\lib\\src\\views\\SignupView.vue"],"sourcesContent":["<template>\r\n  <div class=\"form-container\">\r\n    <button @click=\"goBack\" class=\"back-button\">◁</button>\r\n\r\n    <h2>회원가입</h2>\r\n\r\n    <form @submit.prevent=\"handleSignup\">\r\n      <!-- 이메일 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">이메일</label>\r\n        <div class=\"email-input-wrapper\">\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            placeholder=\"이메일 입력\" \r\n            required \r\n          />\r\n          <button type=\"button\" @click=\"checkEmailDuplicate\">중복 확인</button>\r\n        </div>\r\n        <span v-if=\"emailErrorMessage\" style=\"color: red;\">{{ emailErrorMessage }}</span>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"verificationCode\">인증번호</label>\r\n        <div class=\"email-input-wrapper\">\r\n          <input \r\n            type=\"text\" \r\n            id=\"verificationCode\" \r\n            v-model=\"verificationCode\" \r\n            placeholder=\"인증번호 입력\" \r\n            required \r\n          />\r\n          <button type=\"button\" @click=\"sendVerificationCode\">인증번호 받기</button>\r\n          <button type=\"button\" @click=\"verifyCode\">인증하기</button>\r\n        </div>\r\n        <span v-if=\"verificationErrorMessage\" style=\"color: red;\">{{ verificationErrorMessage }}</span>\r\n      </div>\r\n\r\n      <!-- 비밀번호 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">비밀번호</label>\r\n        <div class=\"password-input-wrapper\">\r\n          <input\r\n            :type=\"passwordVisible ? 'text' : 'password'\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            placeholder=\"비밀번호 입력\"\r\n            required\r\n          />\r\n          <span class=\"toggle-visibility\" @click=\"togglePasswordVisibility('password')\">\r\n            {{ passwordVisible ? '👁️' : '👁️‍🗨️' }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    \r\n      <!-- 비밀번호 확인 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"passwordConfirm\">비밀번호 확인</label>\r\n        <div class=\"password-input-wrapper\">\r\n          <input\r\n            :type=\"passwordConfirmVisible ? 'text' : 'password'\"\r\n            id=\"passwordConfirm\"\r\n            v-model=\"passwordConfirm\"\r\n            placeholder=\"비밀번호 확인 입력\"\r\n            required\r\n          />\r\n          <span class=\"toggle-visibility\" @click=\"togglePasswordVisibility('passwordConfirm')\">\r\n            {{ passwordConfirmVisible ? '👁️' : '👁️‍🗨️' }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 이름 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">이름</label>\r\n        <input type=\"text\" id=\"name\" v-model=\"name\" placeholder=\"이름 입력\" required />\r\n      </div>\r\n\r\n      <!-- 닉네임 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"nickname\">닉네임</label>\r\n        <input type=\"text\" id=\"nickname\" v-model=\"nickname\" placeholder=\"닉네임 입력\" required />\r\n      </div>\r\n\r\n      <!-- 생년월일 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"birthdate\">생년월일</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"birthdate\"\r\n          v-model=\"birthdate\"\r\n          placeholder=\"YYYY-MM-DD\"\r\n          pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <!-- 성별 -->\r\n      <div class=\"form-group\">\r\n        <label>성별</label>\r\n        <div class=\"gender\">\r\n          <label>\r\n            <input type=\"radio\" value=\"남\" v-model=\"gender\" required /> 남\r\n          </label>\r\n          <label>\r\n            <input type=\"radio\" value=\"여\" v-model=\"gender\" required /> 여\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 선호 장르 -->\r\n      <div class=\"form-group\">\r\n        <label>선호 장르</label>\r\n        <div class=\"genre-select\">\r\n          <label for=\"genre1\">[장르 1]</label>\r\n          <select v-model=\"selectedGenre1\" id=\"genre1\" required>\r\n            <option value=\"\" disabled selected>선택</option>\r\n            <option v-for=\"genre in allGenres\" :key=\"genre\" :value=\"genre\">{{ genre }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"genre-select\">\r\n          <label for=\"genre2\">[장르 2]</label>\r\n          <select v-model=\"selectedGenre2\" id=\"genre2\">\r\n            <option value=\"\" disabled selected>선택</option>\r\n            <option v-for=\"genre in allGenres\" :key=\"genre\" :value=\"genre\">{{ genre }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"genre-select\">\r\n          <label for=\"genre3\">[장르 3]</label>\r\n          <select v-model=\"selectedGenre3\" id=\"genre3\">\r\n            <option value=\"\" disabled selected>선택</option>\r\n            <option v-for=\"genre in allGenres\" :key=\"genre\" :value=\"genre\">{{ genre }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"signup-button\">회원가입하기</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\"; // axios import 추가\r\n\r\nexport default {\r\n  name: \"SignupView\",\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      verificationCode: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      passwordVisible: false,\r\n      passwordConfirmVisible: false,\r\n      name: \"\",\r\n      nickname: \"\",\r\n      birthdate: \"\",\r\n      gender: \"\",\r\n      selectedGenre1: \"\",\r\n      selectedGenre2: \"\",\r\n      selectedGenre3: \"\",\r\n      allGenres: [\r\n        \"도서관, 서지학\", \"문헌정보학\", \"백과사전\", \"강연집, 수필집, 연설문집\",\r\n        \"일반 연속간행물\", \"일반학회, 단체, 협회, 기관\", \"신문, 언론, 저널리즘\", \"일반전집, 총서\", \"향토자료\",\r\n      ],\r\n      emailErrorMessage: \"\",\r\n      verificationErrorMessage: \"\",\r\n      isVerificationCodeSent: false,\r\n    };\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      this.$router.push(\"/login\");\r\n    },\r\n    \r\n    async checkEmailDuplicate() {\r\n      try {\r\n        const response = await axios.post(\"/api/user/register\", { email: this.email });\r\n        if (response.data.isDuplicate) {\r\n          this.emailErrorMessage = \"이미 사용된 이메일입니다.\";\r\n        } else {\r\n          this.emailErrorMessage = \"\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"이메일 중복 확인 오류:\", error);\r\n      }\r\n    },\r\n\r\n    async sendVerificationCode() {\r\n      if (!this.email) {\r\n        alert(\"이메일을 입력해주세요.\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.post(\"/api/user/register\", { email: this.email });\r\n        if (response.data.success) {\r\n          alert(\"인증번호가 이메일로 전송되었습니다.\");\r\n          this.isVerificationCodeSent = true;\r\n        } else {\r\n          alert(\"인증번호 전송에 실패했습니다.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"인증번호 전송 오류:\", error);\r\n      }\r\n    },\r\n\r\n    async verifyCode() {\r\n      if (!this.verificationCode) {\r\n        alert(\"인증번호를 입력해주세요.\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.post(\"/api/user/register\", {\r\n          email: this.email,\r\n          verificationCode: this.verificationCode,\r\n        });\r\n        if (response.data.isValid) {\r\n          this.verificationErrorMessage = \"\";\r\n          alert(\"인증 성공\");\r\n        } else {\r\n          this.verificationErrorMessage = \"인증번호가 올바르지 않습니다.\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"인증번호 확인 오류:\", error);\r\n      }\r\n    },\r\n\r\n    async handleSignup() {\r\n      if (this.password !== this.passwordConfirm) {\r\n        alert(\"비밀번호가 일치하지 않습니다.\");\r\n        return;\r\n      }\r\n      const signupData = {\r\n        email: this.email,\r\n        password: this.password,\r\n        name: this.name,\r\n        nickname: this.nickname,\r\n        birthdate: this.birthdate,\r\n        gender: this.gender,\r\n        genres: [this.selectedGenre1, this.selectedGenre2, this.selectedGenre3],\r\n      };\r\n      console.log(\"회원가입 데이터:\", signupData);\r\n      try {\r\n        const response = await axios.post(\"/api/user/register\", signupData);\r\n        if (response.data.success) {\r\n          alert(\"회원가입 성공!\");\r\n        } else {\r\n          alert(\"회원가입 실패.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"회원가입 오류:\", error);\r\n      }\r\n    },\r\n\r\n    togglePasswordVisibility(field) {\r\n      if (field === \"password\") {\r\n        this.passwordVisible = !this.passwordVisible;\r\n      } else if (field === \"passwordConfirm\") {\r\n        this.passwordConfirmVisible = !this.passwordConfirmVisible;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n  \r\n<style scoped>\r\n.form-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n}\r\n\r\n.email-input-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px; /* 입력란과 버튼 사이의 간격 */\r\n}\r\n\r\n.email-input-wrapper input {\r\n  flex: 1; /* 입력란이 가로로 확장되도록 설정 */\r\n}\r\n\r\n.email-input-wrapper button {\r\n  padding: 8px 12px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: #28a745;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.email-input-wrapper button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n/* 비밀번호 스타일 추가 */\r\n.password-input-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n\r\n.password-input-wrapper input {\r\n  flex: 1;\r\n}\r\n\r\n.toggle-visibility {\r\n  cursor: pointer;\r\n  padding: 0 10px;\r\n  font-size: 18px;\r\n  color: #666;\r\n  user-select: none;\r\n}\r\n\r\ninput,\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* 성별 체크박스 */\r\n.gender {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.gender label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 7px; /* 텍스트와 체크박스 간격 */\r\n}\r\n\r\n.signup-button {\r\n  width: 100%;\r\n  padding: 8px; /* 버튼 크기 줄이기 */\r\n  font-size: 14px; /* 폰트 크기 줄이기 */\r\n  color: #fff;\r\n  background: #28a745;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.signup-button:hover {\r\n  background: #218838;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}