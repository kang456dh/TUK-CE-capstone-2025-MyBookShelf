{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nexport default {\n  name: \"MyBooksView\",\n  data() {\n    return {\n      bookshelves: [{\n        name: \"책장 1\",\n        books: Array(20).fill({\n          cover: null\n        })\n      }],\n      currentBookshelf: \"책장 1\",\n      isRenaming: false,\n      newBookshelfName: \"\",\n      isSidebarOpen: false,\n      registerType: \"manual\",\n      manualTitle: \"\",\n      isbn: \"\"\n    };\n  },\n  computed: {\n    currentBookshelfBooks() {\n      const shelf = this.bookshelves.find(shelf => shelf.name === this.currentBookshelf);\n      return shelf ? shelf.books : [];\n    }\n  },\n  methods: {\n    toggleRenameMode() {\n      if (this.isRenaming) {\n        const shelf = this.bookshelves.find(shelf => shelf.name === this.currentBookshelf);\n        if (shelf) shelf.name = this.newBookshelfName;\n        this.currentBookshelf = this.newBookshelfName;\n      } else {\n        this.newBookshelfName = this.currentBookshelf;\n      }\n      this.isRenaming = !this.isRenaming;\n    },\n    selectBookshelf() {\n      // 책장 변경 로직\n    },\n    addBookshelf() {\n      const newShelfName = `책장 ${this.bookshelves.length + 1}`;\n      this.bookshelves.push({\n        name: newShelfName,\n        books: Array(20).fill({\n          cover: null\n        })\n      });\n      this.currentBookshelf = newShelfName;\n    },\n    deleteBookshelf() {\n      this.bookshelves = this.bookshelves.filter(shelf => shelf.name !== this.currentBookshelf);\n      if (this.bookshelves.length > 0) {\n        this.currentBookshelf = this.bookshelves[0].name;\n      } else {\n        this.addBookshelf();\n      }\n    },\n    openSidebar() {\n      this.isSidebarOpen = true;\n    },\n    closeSidebar() {\n      this.isSidebarOpen = false;\n      this.manualTitle = \"\";\n      this.isbn = \"\";\n    },\n    setRegisterType(type) {\n      this.registerType = type;\n    },\n    searchManual() {\n      console.log(\"검색된 책 제목:\", this.manualTitle);\n    },\n    searchISBN() {\n      console.log(\"검색된 ISBN:\", this.isbn);\n    }\n  }\n};","map":{"version":3,"names":["name","data","bookshelves","books","Array","fill","cover","currentBookshelf","isRenaming","newBookshelfName","isSidebarOpen","registerType","manualTitle","isbn","computed","currentBookshelfBooks","shelf","find","methods","toggleRenameMode","selectBookshelf","addBookshelf","newShelfName","length","push","deleteBookshelf","filter","openSidebar","closeSidebar","setRegisterType","type","searchManual","console","log","searchISBN"],"sources":["C:\\Users\\sec\\Desktop\\Vue\\proj\\FE-MyBookShelf\\src\\views\\MyBooksView.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-books\">\r\n    <!-- 책장 헤더 -->\r\n    <div class=\"bookshelf-header\">\r\n      <div class=\"bookshelf-controls\">\r\n        <div v-if=\"isRenaming\">\r\n          <input \r\n            v-model=\"newBookshelfName\" \r\n            @keyup.enter=\"toggleRenameMode\" \r\n            class=\"rename-input\" \r\n            type=\"text\" \r\n            placeholder=\"새 책장 이름 입력\"\r\n          />\r\n        </div>\r\n        <select\r\n          v-else\r\n          v-model=\"currentBookshelf\"\r\n          @change=\"selectBookshelf\"\r\n          class=\"bookshelf-select\"\r\n        >\r\n          <option\r\n            v-for=\"(shelf, index) in bookshelves\"\r\n            :key=\"index\"\r\n            :value=\"shelf.name\"\r\n          >\r\n            {{ shelf.name }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"toggleRenameMode\" class=\"rename-button\">\r\n          {{ isRenaming ? \"저장\" : \"이름 변경\" }}\r\n        </button>\r\n        <button @click=\"addBookshelf\" class=\"add-bookshelf-button\">+</button>\r\n        <button @click=\"deleteBookshelf\" class=\"delete-bookshelf-button\">🗑</button>\r\n        <button @click=\"openSidebar\" class=\"add-book-button\">책 등록</button> <!-- 책 등록 버튼 -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 네모난 책장 폼 -->\r\n    <div class=\"bookshelf\">\r\n      <div class=\"book-grid\">\r\n        <div\r\n          v-for=\"(book, index) in currentBookshelfBooks\"\r\n          :key=\"index\"\r\n          class=\"book-placeholder\"\r\n        >\r\n          <div v-if=\"book.cover\" class=\"book-cover\">\r\n            <img :src=\"book.cover\" alt=\"책 표지\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 사이드바 -->\r\n    <div v-if=\"isSidebarOpen\" class=\"sidebar\">\r\n      <div class=\"sidebar-content\">\r\n        <button class=\"close-button\" @click=\"closeSidebar\">✖</button>\r\n        <h3>책 등록</h3>\r\n        <div class=\"registration-options\">\r\n          <button @click=\"setRegisterType('manual')\" :class=\"{ active: registerType === 'manual' }\">\r\n            직접 등록\r\n          </button>\r\n          <button @click=\"setRegisterType('isbn')\" :class=\"{ active: registerType === 'isbn' }\">\r\n            ISBN 등록\r\n          </button>\r\n        </div>\r\n        <div v-if=\"registerType === 'manual'\" class=\"manual-form\">\r\n          <label for=\"title\">책 제목</label>\r\n          <input type=\"text\" id=\"title\" v-model=\"manualTitle\" placeholder=\"책 제목 입력\" />\r\n          <button @click=\"searchManual\">검색</button>\r\n        </div>\r\n        <div v-if=\"registerType === 'isbn'\" class=\"isbn-form\">\r\n          <label for=\"isbn\">ISBN</label>\r\n          <input type=\"text\" id=\"isbn\" v-model=\"isbn\" placeholder=\"ISBN 입력\" />\r\n          <button @click=\"searchISBN\">검색</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MyBooksView\",\r\n  data() {\r\n    return {\r\n      bookshelves: [\r\n        { name: \"책장 1\", books: Array(20).fill({ cover: null }) },\r\n      ],\r\n      currentBookshelf: \"책장 1\",\r\n      isRenaming: false,\r\n      newBookshelfName: \"\",\r\n      isSidebarOpen: false,\r\n      registerType: \"manual\",\r\n      manualTitle: \"\",\r\n      isbn: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    currentBookshelfBooks() {\r\n      const shelf = this.bookshelves.find(\r\n        (shelf) => shelf.name === this.currentBookshelf\r\n      );\r\n      return shelf ? shelf.books : [];\r\n    },\r\n  },\r\n  methods: {\r\n    toggleRenameMode() {\r\n      if (this.isRenaming) {\r\n        const shelf = this.bookshelves.find(\r\n          (shelf) => shelf.name === this.currentBookshelf\r\n        );\r\n        if (shelf) shelf.name = this.newBookshelfName;\r\n        this.currentBookshelf = this.newBookshelfName;\r\n      } else {\r\n        this.newBookshelfName = this.currentBookshelf;\r\n      }\r\n      this.isRenaming = !this.isRenaming;\r\n    },\r\n    selectBookshelf() {\r\n      // 책장 변경 로직\r\n    },\r\n    addBookshelf() {\r\n      const newShelfName = `책장 ${this.bookshelves.length + 1}`;\r\n      this.bookshelves.push({ name: newShelfName, books: Array(20).fill({ cover: null }) });\r\n      this.currentBookshelf = newShelfName;\r\n    },\r\n    deleteBookshelf() {\r\n      this.bookshelves = this.bookshelves.filter(\r\n        (shelf) => shelf.name !== this.currentBookshelf\r\n      );\r\n      if (this.bookshelves.length > 0) {\r\n        this.currentBookshelf = this.bookshelves[0].name;\r\n      } else {\r\n        this.addBookshelf();\r\n      }\r\n    },\r\n    openSidebar() {\r\n      this.isSidebarOpen = true;\r\n    },\r\n    closeSidebar() {\r\n      this.isSidebarOpen = false;\r\n      this.manualTitle = \"\";\r\n      this.isbn = \"\";\r\n    },\r\n    setRegisterType(type) {\r\n      this.registerType = type;\r\n    },\r\n    searchManual() {\r\n      console.log(\"검색된 책 제목:\", this.manualTitle);\r\n    },\r\n    searchISBN() {\r\n      console.log(\"검색된 ISBN:\", this.isbn);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my-books {\r\n  padding: 20px;\r\n}\r\n\r\n.bookshelf-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.bookshelf-controls {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.bookshelf-select {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  width: 300px;\r\n}\r\n\r\n.rename-button,\r\n.add-bookshelf-button,\r\n.delete-bookshelf-button,\r\n.add-book-button {\r\n  background-color: #ffa500;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n}\r\n\r\n.add-bookshelf-button {\r\n  background-color: #28a745;\r\n}\r\n\r\n.delete-bookshelf-button {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.add-book-button {\r\n  background-color: #007bff; /* 책 등록 버튼 색 */\r\n  \r\n}\r\n\r\n.bookshelf {\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.book-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 30px;\r\n}\r\n\r\n.book-placeholder {\r\n  width: 80%;\r\n  padding-top: 100%;\r\n  background-color: #e9ecef;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center; /* 책 표지를 가로 중앙으로 정렬 */\r\n  align-items: center; /* 책 표지를 세로 중앙으로 정렬 */\r\n}\r\n\r\n.book-cover img {\r\n  width: 80%; /* 책 표지 너비를 80%로 설정 */\r\n  height: auto; /* 자동으로 비율에 맞게 높이를 설정 */\r\n  object-fit: cover;\r\n  border-radius: 8px;\r\n}\r\n\r\n\r\n/* 사이드바 스타일 */\r\n.sidebar {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 400px;\r\n  height: 100%;\r\n  background-color: #fff;\r\n  box-shadow: -2px 0 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  padding: 25px;\r\n}\r\n\r\n.rename-input {\r\n  padding: 5px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}